name: Validate and Bump Version

on:
  pull_request:
    branches:
      - dev

jobs:
  check-label:
    name: Check PR Label
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.extract-label.outputs.label }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Check for a single valid label
        id: extract-label
        run: |
          LABELS=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[].name')
          echo "Labels found: $LABELS"
          
          VALID_LABEL=$(echo "$LABELS" | grep -E '^(fix|feature|major)$' || true)
          COUNT=$(echo "$VALID_LABEL" | wc -l)
          
          if [ "$COUNT" -ne 1 ]; then
            echo "Il doit y avoir un seul label parmi : fix, feature, major (trouvé: $COUNT)"
            exit 1
          fi
          
          echo "Label valide: $VALID_LABEL"
          echo "label=$VALID_LABEL" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bump-version:
    name: Bump Version
    needs: check-label
    runs-on: ubuntu-latest
    steps:
      - name: Bump version in pubspec.yaml
        working-directory: scripts
        id: bump
        run: |
          VERSION_FILE="../safran/pubspec.yaml"
          LABEL=$1
          
          VERSION=$(grep '^version:' "$VERSION_FILE" | cut -d' ' -f2 | cut -d'+' -f1)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          
          case "$LABEL" in
          fix)
          PATCH=$((PATCH + 1))
          ;;
          feature)
          MINOR=$((MINOR + 1))
          PATCH=0
          ;;
          major)
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0
          ;;
          *)
          echo "Type de bump inconnu. Utilise: fix, feature, major"
          exit 1
          ;;
          esac
          
          # Nouvelle version
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
        
          # Remplacer dans pubspec.yaml (on garde le build number à +1)
          sed -i.bak "s/^version:
          .*/version: ${NEW_VERSION}+1/" "$VERSION_FILE"
