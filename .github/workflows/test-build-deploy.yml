name: Flutter CI + Deploy

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test_and_coverage:
    name: Test & Coverage
    runs-on: ubuntu-latest

    outputs:
      coverage_path: ${{ steps.set-output.outputs.coverage_path }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install dependencies
        run: flutter pub get
        working-directory: safran

      - name: Run tests with coverage
        run: flutter test --coverage
        working-directory: safran

      - name: Set output path
        id: set-output
        run: echo "coverage_path=safran/coverage/lcov.info" >> $GITHUB_OUTPUT

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: lcov-report
          path: safran/coverage/lcov.info

  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: test_and_coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install dependencies
        run: flutter pub get
        working-directory: safran

      - name: Download lcov report
        uses: actions/download-artifact@v4
        with:
          name: lcov-report
          path: safran/coverage

      - name: Run SonarQube
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: safran

  build:
    name: Build APK & AAB
    runs-on: ubuntu-latest
    needs: test_and_coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install dependencies
        run: flutter pub get
        working-directory: safran

      - name: Build APK
        run: flutter build apk --release
        working-directory: safran

      - name: Build App Bundle
        run: flutter build appbundle
        working-directory: safran

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apk
          path: safran/build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: flutter-aab
          path: safran/build/app/outputs/bundle/release/app-release.aab

  versioning:
    name: Version Bump & Tag
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Extract PR labels from last merge commit
        id: label_check
        run: |
          LABELS=$(git log -1 --pretty=%B | grep -oE 'fix|feature|major' | head -1)
          echo "Detected label: $LABELS"
          if [[ -z "$LABELS" ]]; then
            echo "Aucun label de version détecté dans le message de merge."
            exit 1
          fi
          echo "label=$LABELS" >> $GITHUB_OUTPUT

      - name: Bump version based on label
        run: |
          chmod +x scripts/bump_version.sh
          ./scripts/bump_version.sh ${{ steps.label_check.outputs.label }} -dev

      - name: Commit bumped version
        run: |
          git commit -am "ci: bump version based on label"
          git tag "v$(grep version safran/pubspec.yaml | awk '{print $2}' | cut -d+ -f1)-dev"
          git push origin HEAD:dev --tags

  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: flutter-apk
          path: safran/build/app/outputs/flutter-apk/

      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: flutter-aab
          path: safran/build/app/outputs/bundle/release/

      - name: Generate changelog
        id: changelog
        run: |
          echo "CHANGELOG=$(git log -1 --pretty=format:'%h - %s (%an)')" >> $GITHUB_ENV

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute safran/build/app/outputs/flutter-apk/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --token ${{ secrets.FIREBASE_TOKEN }} \
            --groups "safran-test"

      - name: Notify Discord
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "**Nouvelle version déployée : `${{ github.ref_name }}`**\n*Changelog :* ${{ env.CHANGELOG }}"}' \
               ${{ secrets.DISCORD_WEBHOOK }}
